<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Asiwajus-MacBook-Air.local" failures="0" tests="12" name="IosTest" time="2.003" errors="1" timestamp="2022-11-23T12:46:09 WAT" skipped="11">
  <testcase classname="IosTest" name="setup" time="2.003">
    <error message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not create simulator with name &#039;appiumTest-32360543-76B0-4736-AF43-26243BAF400C-iphone 13&#039;, device type id &#039;iphone 13&#039;, with runtime ids &#039;com.apple.CoreSimulator.SimRuntime.iOS-15-5&#039; 
Host info: host: &#039;Asiwajus-MacBook-Air.local&#039;, ip: &#039;fe80:0:0:0:4d2:843b:8960:a091%en0&#039;
Build info: version: &#039;4.6.0&#039;, revision: &#039;79f1c02ae20&#039;
System info: os.name: &#039;Mac OS X&#039;, os.arch: &#039;aarch64&#039;, os.version: &#039;12.1&#039;, java.version: &#039;11.0.17&#039;
Driver info: io.appium.java_client.AppiumDriver
Command: [null, newSession {capabilities=[{appium:app=/Users/oluwabamise/Downloads/AppiumAssignment/app/, appium:automationName=XCUITest, appium:deviceName=iphone 13, platformName=IOS, appium:platformVersion=15.5, appium:simulatorStartupTimeout=180000, appium:udid=, appium:xcodeOrgId=Isaiah&#039;s Iphone, appium:xcodeSigningId=iphone Developer}], desiredCapabilities=Capabilities {app: /Users/oluwabamise/Download..., automationName: XCUITest, deviceName: iphone 13, platformName: IOS, platformVersion: 15.5, simulatorStartupTimeout: 180000, udid: , xcodeOrgId: Isaiah&#039;s Iphone, xcodeSigningId: iphone Developer}}]
Capabilities {}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not create simulator with name 'appiumTest-32360543-76B0-4736-AF43-26243BAF400C-iphone 13', device type id 'iphone 13', with runtime ids 'com.apple.CoreSimulator.SimRuntime.iOS-15-5' 
Host info: host: 'Asiwajus-MacBook-Air.local', ip: 'fe80:0:0:0:4d2:843b:8960:a091%en0'
Build info: version: '4.6.0', revision: '79f1c02ae20'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '12.1', java.version: '11.0.17'
Driver info: io.appium.java_client.AppiumDriver
Command: [null, newSession {capabilities=[{appium:app=/Users/oluwabamise/Downloads/AppiumAssignment/app/, appium:automationName=XCUITest, appium:deviceName=iphone 13, platformName=IOS, appium:platformVersion=15.5, appium:simulatorStartupTimeout=180000, appium:udid=, appium:xcodeOrgId=Isaiah's Iphone, appium:xcodeSigningId=iphone Developer}], desiredCapabilities=Capabilities {app: /Users/oluwabamise/Download..., automationName: XCUITest, deviceName: iphone 13, platformName: IOS, platformVersion: 15.5, simulatorStartupTimeout: 180000, udid: , xcodeOrgId: Isaiah's Iphone, xcodeSigningId: iphone Developer}}]
Capabilities {}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:146)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:126)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:155)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:189)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:541)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:80)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:92)
at TestBase.iosSetup(TestBase.java:39)
at IosTest.setup(IosTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:643)
at org.testng.TestRunner.beforeRun(TestRunner.java:632)
at org.testng.TestRunner.run(TestRunner.java:594)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
]]>
    </error>
  </testcase> <!-- setup -->
  <system-out/>
  <testcase classname="IosTest" name="headerVerify" time="0.000">
    <skipped/>
  </testcase> <!-- headerVerify -->
  <system-out/>
  <testcase classname="IosTest" name="addTask" time="0.000">
    <skipped/>
  </testcase> <!-- addTask -->
  <system-out/>
  <testcase classname="IosTest" name="createTitle" time="0.000">
    <skipped/>
  </testcase> <!-- createTitle -->
  <system-out/>
  <testcase classname="IosTest" name="textBoxVerify" time="0.000">
    <skipped/>
  </testcase> <!-- textBoxVerify -->
  <system-out/>
  <testcase classname="IosTest" name="textBoxClick" time="0.000">
    <skipped/>
  </testcase> <!-- textBoxClick -->
  <system-out/>
  <testcase classname="IosTest" name="noteIconVerify" time="0.000">
    <skipped/>
  </testcase> <!-- noteIconVerify -->
  <system-out/>
  <testcase classname="IosTest" name="backBtnClick" time="0.000">
    <skipped/>
  </testcase> <!-- backBtnClick -->
  <system-out/>
  <testcase classname="IosTest" name="hamBurgerVerify" time="0.000">
    <skipped/>
  </testcase> <!-- hamBurgerVerify -->
  <system-out/>
  <testcase classname="IosTest" name="hamBurgerClick" time="0.000">
    <skipped/>
  </testcase> <!-- hamBurgerClick -->
  <system-out/>
  <testcase classname="IosTest" name="menuIconVerify" time="0.000">
    <skipped/>
  </testcase> <!-- menuIconVerify -->
  <system-out/>
  <testcase classname="IosTest" name="closeDriver" time="0.000">
    <skipped/>
  </testcase> <!-- closeDriver -->
  <system-out/>
</testsuite> <!-- IosTest -->
